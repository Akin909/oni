import * as Oni from "oni-api"

import * as path from "path"

import { Assertor } from "./Assert"
import { waitForCommand } from "./Common"

export const test = async (oni: Oni.Plugin.Api) => {
    const assert = new Assertor("QuickOpen")
    await oni.automation.waitForEditors()
    await oni.automation.waitFor(() => oni.plugins.loaded)
    const instance = oni.plugins.getPlugin("oni-plugin-quickopen")
    assert.defined(instance, "plugin instance")

    // Start (Open and close the menu)
    oni.commands.executeCommand("quickOpen.searchFileByPath")
    await oni.automation.waitFor(() => oni.menu.isMenuOpen())

    await waitForCommand("menu.close", oni)
    oni.commands.executeCommand("menu.close")
    await oni.automation.waitFor(() => !oni.menu.isMenuOpen())
    await oni.automation.sleep(200)
    // End

    // Start (file search)
    await waitForCommand("quickOpen.searchFileByPath", oni)
    oni.commands.executeCommand("quickOpen.searchFileByPath")
    await oni.automation.waitFor(() => oni.menu.isMenuOpen())

    const anyOni = oni as any
    await oni.automation.sleep(800)
    anyOni.automation.sendKeysV2("searchprovider.ts")
    await oni.automation.sleep(200)
    anyOni.automation.sendKeysV2("<CR>")
    const editor = oni.editors.activeEditor
    await oni.automation.waitFor(() =>
        editor.activeBuffer.filePath.endsWith(path.sep + "SearchProvider.ts"),
    )
    // End

    // Start (Line search)
    await waitForCommand("quickOpen.searchFileByContent", oni)
    oni.commands.executeCommand("quickOpen.searchFileByContent")
    await oni.automation.waitFor(() => oni.menu.isMenuOpen())
    await oni.automation.sleep(800)
    anyOni.automation.sendKeysV2("^exp.*?class.*?Qu.*?Op.*?Item")
    await oni.automation.sleep(2000)
    anyOni.automation.sendKeysV2("<CR>")
    await oni.automation.waitFor(() => !oni.menu.isMenuOpen())
    await oni.automation.sleep(200)
    const filePath = editor.activeBuffer.filePath
    assert.assert(filePath.endsWith("QuickOpenItem.ts"), `${filePath} endswith`)
    assert.assert(editor.activeBuffer.cursor.line > 3, `${editor.activeBuffer.cursor.line} > 3`)
    // End
}
